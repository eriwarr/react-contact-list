{"version":3,"sources":["components/App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","state","firstName","lastName","address","phoneNumber","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","addContact","onSubmit","type","placeholder","onChange","Component","ContactList","contact","contacts","map","id","ContactSheet","counter","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAGMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,YAAa,IAEf,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,+CAYnB,SAAYE,GACVC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGpD,SAAaL,GACXA,EAAMM,iBACNL,KAAKV,MAAMgB,WAAW,CACpBd,UAAWQ,KAAKT,MAAMC,UACtBC,SAAUO,KAAKT,MAAME,SACrBC,QAASM,KAAKT,MAAMG,QACpBC,YAAaK,KAAKT,MAAMI,cAE1BK,KAAKC,SAAS,CAAET,UAAW,GAAIC,SAAU,GAAIC,QAAS,GAAIC,YAAa,O,oBAGzE,WAEE,OACE,uBAAMY,SAAUP,KAAKF,aAArB,UACA,uBAAOU,KAAK,OAAOL,KAAK,YAAYM,YAAY,wBAAwBL,MAAOJ,KAAKT,MAAMC,UAAWkB,SAAUV,KAAKJ,cACpH,uBAAOY,KAAK,OAAOL,KAAK,WAAWM,YAAY,uBAAuBL,MAAOJ,KAAKT,MAAME,SAAUiB,SAAUV,KAAKJ,cACjH,uBAAOY,KAAK,OAAOL,KAAK,UAAUM,YAAY,qBAAqBL,MAAOJ,KAAKT,MAAMG,QAASgB,SAAUV,KAAKJ,cAC7G,uBAAOY,KAAK,MAAML,KAAK,cAAcM,YAAY,eAAeL,MAAOJ,KAAKT,MAAMI,YAAae,SAAUV,KAAKJ,cAC9G,wBAAQY,KAAK,SAAb,2B,GApCoBG,aA0C1B,SAASC,EAAYtB,GACjB,IAAMuB,EAAUvB,EAAMwB,SAASC,KAAI,SAACF,GAAD,OACjC,6BACE,gCACE,+BAAKA,EAAQrB,UAAb,IAAyBqB,EAAQpB,YACjC,4BAAIoB,EAAQnB,UACZ,+BAAOmB,EAAQlB,kBAJVkB,EAAQG,OAUrB,OACE,6BAAKH,I,IAgCMI,E,kDA1Bb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXuB,SAAU,GACVI,QAAS,GAEX,EAAKZ,WAAa,EAAKA,WAAWT,KAAhB,gBAND,E,8CASnB,SAAWgB,GACTA,EAAQG,GAAKhB,KAAKT,MAAM2B,QACxB,IAAMJ,EAAQ,YAASd,KAAKT,MAAMuB,UAClCA,EAASK,KAAKN,GACdb,KAAKC,SAAS,CAAEa,WAAUI,QAASlB,KAAKT,MAAM2B,QAAU,M,oBAG1D,WACE,OACE,gCACA,cAAC,EAAD,CAAaZ,WAAYN,KAAKM,aAC9B,cAACM,EAAD,CAAaE,SAAUd,KAAKT,MAAMuB,kB,GArBbH,aCnDZS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a66e2b1d.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react';\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      address: '',\n      phoneNumber: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addContact({\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      address: this.state.address,\n      phoneNumber: this.state.phoneNumber,\n    });\n    this.setState({ firstName: '', lastName: '', address: '', phoneNumber: '',})\n  }\n\n  render() {\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n      <input type=\"text\" name=\"firstName\" placeholder=\"Enter your first name\" value={this.state.firstName} onChange={this.handleInput}/>\n      <input type=\"text\" name=\"lastName\" placeholder=\"Enter your last name\" value={this.state.lastName} onChange={this.handleInput}/>\n      <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" value={this.state.address} onChange={this.handleInput}/>\n      <input type=\"tel\" name=\"phoneNumber\" placeholder=\"123-456-7890\" value={this.state.phoneNumber} onChange={this.handleInput}/>\n      <button type=\"submit\">Submit</button>\n      </form>\n    )\n  }\n}\n\nfunction ContactList(props){\n    const contact = props.contacts.map((contact) => (\n      <li key={contact.id}>\n        <div>\n          <h1>{contact.firstName} {contact.lastName}</h1>\n          <p>{contact.address}</p>\n          <span>{contact.phoneNumber}</span>\n        </div>\n      </li>\n    ))\n\n\n  return (\n    <ul>{contact}</ul>\n  )\n};\n\n\nclass ContactSheet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      counter: 0,\n    }\n    this.addContact = this.addContact.bind(this);\n  }\n\n  addContact(contact){\n    contact.id = this.state.counter;\n    const contacts =  [ ...this.state.contacts ];\n    contacts.push(contact);\n    this.setState({ contacts, counter: this.state.counter + 1 });\n  }\n\n  render() {\n    return (\n      <div>\n      <ContactForm addContact={this.addContact}/>\n      <ContactList contacts={this.state.contacts}/>\n      </div>\n    )\n  }\n}\n\nexport default ContactSheet;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}